{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{{ attach_library('ice/ice-owl-carousel-base') }}
{{ attach_library('ice/ice-slideshow-generic') }}

<section{{ attributes }}>

  {% block media_detail %}
    <div class="owl-carousel ice-carousel-slide-1 slideshow owl-theme u-background-40"
         role="region"
         id="multimedia-carousel-full">

      {% for slide in multimedia_slides %}
        <div class="Carousel-item u-background-black">
          <figure>
            {# Image #}
            <div class="wrapper-image">
              <img src="{{ file_url(slide.image.data.path) }}"
                   alt="{{ slide.image.data.alt }}"
                   title="{{ slide.image.data.title }}"
                   class="u-sizeFull u-layoutCenter ice-slide-image"/>
            </div>
            {% if (slide.text) %}
              <figcaption
                      class="u-text-r-xs u-padding-r-all u-background-black u-sizeFull">
                <div class="Grid">
                  <span class="Grid-cell u-sizeFit Icon-camera u-color-white u-floatLeft u-text-r-l"
                        aria-hidden="true"></span>
                  <h3 id="desc-1"
                      class="Grid-cell u-sizeFill u-padding-left-s u-lineHeight-l u-color-white u-text-r-xs u-textWeight-700">
                    {{ slide.text.data }}
                  </h3>
                </div>
              </figcaption>
            {% endif %}
          </figure>
        </div>
      {% endfor %}

    </div>


    {# Prev / Next buttons #}
    <div class="wrapper-carousel-buttons u-padding-top-s">

      {# Prev button #}
      <button class="owl-prev u-padding-right-s u-text-r-l u-color-teal-50 ice-display-none"
              aria-controls="multimedia-carousel-full">
            <span class="u-hiddenVisually">
              {{ 'Go to previous slide' | t }}
            </span>
        <span class="u-alignMiddle Icon Icon-arrow-left"
              role="presentation"></span>
      </button>

      {# Next button #}
      <button class="owl-next u-padding-left u-text-r-l u-color-teal-50 ice-display-none"
              aria-controls="multimedia-carousel-full">
            <span class="u-hiddenVisually">
              {{ 'Go to next slide' | t }}
            </span>
        <span class="u-alignMiddle Icon Icon-arrow-right"
              role="presentation"></span>
      </button>

      {# Caption #}
      <p class="u-hiddenVisually">
        {{ 'Navigation from keyboard possible' | t }}
      </p>
    </div>
  {% endblock %}

  <div class="u-margin-top-xl ice-multimedia-content u-color-grey-30 u-border-top-xxs">
    <div class="ice-multimedia-data u-padding-r-top u-text-r-xxs u-textSecondary u-textWeight-400 u-lineHeight-xl u-cf">
      {{ content.field_data }}
    </div>
    <div class="ice-multimedia-body Prose">
      {{ content.field_page_body }}
    </div>
  </div>

</section>
