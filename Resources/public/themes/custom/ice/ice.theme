<?php

/**
 * @file
 * Contains functions to alter Drupal's markup for the ICE theme.
 */

/**
 * Implements hook_preprocess_page().
 */
function ice_preprocess_page(&$variables) {
  // Retrives theme settings and set variables for template usage.
  $variables['second_afferent_administration_url'] = theme_get_setting('header_settings.ice_second_afferent_administration_url');
  $variables['second_afferent_administration_name'] = theme_get_setting('header_settings.ice_second_afferent_administration_name');
}

/**
 * Implements hook_preprocess_block().
 */
function ice_preprocess_block__system_branding_block(&$variables) {
  $variables['ice_slogan_url'] = theme_get_setting('header_settings.ice_slogan_url');
}

/**
 * Implements hook_preprocess_block().
 */
function ice_preprocess_block__system_menu_block(&$variables) {
  if ((!empty($variables['content']['#menu_name']))) {
    $menu = $variables['content']['#menu_name'];
    $variables['attributes']['id'] = $menu;
  }
}

/**
 * Implements hook_preprocess_block().
 */
function ice_preprocess_block__system_breadcrumb_block(&$variables) {
  $variables['content']['#cache']['contexts'][] = 'url';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function ice_theme_suggestions_region_alter(&$suggestions, $variables, $hook) {
  // The current region name.
  $region_name = $variables['elements']['#region'];
  // Register suggestion according to the alias.
  if ($region_name == 'postscript_first') {
    $current_path = \Drupal::service('path.current')->getPath();
    // Todo: change alias based logic for suggestion.
    $path = \Drupal::service('path.alias_manager')
      ->getAliasByPath($current_path);
    $suggestion_suffix = preg_replace("/[^\w\d]/i", "_", $path);
    $suggestions[] = end($suggestions) . $suggestion_suffix;
  }
}

/**
 * Implements hook_theme_suggestions_block_alter().
 */
function ice_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  $region = $variables['elements']['#configuration']['region'] ?: NULL;
  ice_theme_suggestion_block_by_region($suggestions, $region);
}

/**
 * Function that inserts into the first index of suggestions array,
 * the suggestion related to the current group type and region name.
 *
 * @param array $suggestions
 *   List of suggestions.
 * @param string $region
 *   The region name.
 */
function ice_theme_suggestion_block_by_region(array &$suggestions, $region) {
  if (empty($region)) {
    return;
  }
  $suggestion_tmp[] = 'block__' . $region;
  $group = \Drupal::routeMatch()->getParameter('group');
  if (!empty($group)) {
    $group_id = $group->getGroupType()->id();
    $suggestion_tmp[] = $suggestion_tmp[0] . '__' . $group_id;
  }
  $suggestions = array_merge($suggestion_tmp, $suggestions);
}

/**
 * Implements hook_theme_suggestions_form_alter().
 */
function ice_theme_suggestions_form_alter(&$suggestions, array $variables) {
  $form = $variables['element'];
  $suggestions[] = 'form__' . str_replace('-', '_', $form['#id']);
}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function ice_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  $node = $variables['elements']['#node'];
  $node_type = $node->getType();
  $view_mode = $variables['elements']['#view_mode'];

  if ($node_type != 'multimedia') {
    return;
  }

  if ($view_mode != 'full') {
    return;
  }

  $multimedia_type = $node->get('field_multimedia_type')
    ->getValue()[0]['value'];
  if (empty($multimedia_type)) {
    return;
  }
  $suggestions[] = 'node__' . $node_type . '__' . $view_mode . '__' . $multimedia_type;
}

/**
 * Implements hook_preprocess_field().
 */
function ice_preprocess_field(&$variables) {

  if ($variables['field_name'] == 'field_sector_product_cards') {
    $variables['product_cards_url'] = 'http://www.gengiscan.com';
    foreach ($variables['items'] as $item) {
      $fields = $item['content']['#paragraph']->getFields();
      $fimageList = $fields['field_image'];
      $value = $fimageList->get(0)->getValue();
      $url = \Drupal::config('ice_core.settings')->get('product_cards_url');
      $value['ice-product-cards-url'] = $url;
      $fimageList->get(0)->setValue($value);
    }
  }

  if ($variables['field_name'] == 'field_image') {
    $img = $variables['items'][0]['content']['#item'];
    if (empty($img->getValue()['ice-product-cards-url'])) {
      return;
    }
    $variables['product_cards_url'] = $img->getValue()['ice-product-cards-url'];
  }
}
